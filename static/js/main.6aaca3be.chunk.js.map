{"version":3,"sources":["component/card/card.component.jsx","component/cards-list/card-list.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Mycards","props","className","src","name","image","height","width","style","objectFit","alt","actor","id","CardList","i","list","map","char","Fragment","App","state","all","search","fetch","then","res","json","data","setState","this","filterData","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAGaA,EAAU,SAAAC,GACnB,OACI,sBAAoBC,UAAU,QAA9B,UACI,qBAAKC,IAAKF,EAAMG,KAAKC,MAAOC,OAAO,QAAQC,MAAM,QAAQC,MAAO,CAACC,UAAU,WAAYC,IAAI,WAC3F,6BAAKT,EAAMG,KAAKA,OAChB,4BAAIH,EAAMG,KAAKO,UAHTV,EAAMW,KCFXC,EAAW,SAAAZ,GACpB,IAAIa,EAAI,EACR,OACI,qBAAKZ,UAAU,OAAf,SACCD,EAAMc,KAAKC,KAAI,SAAAC,GAAI,OAChB,cAAC,IAAMC,SAAP,UACiB,KAAfD,EAAKZ,MAAgB,cAAC,EAAD,CAASD,KAAMa,GAAWH,KAAW,8BADvCA,WCkClBK,E,kDArCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXC,IAAM,GACNC,OAAS,IALA,E,qDAQb,WAAoB,IAAD,OAKjBC,MAAM,+CACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACP,IAAMM,S,oBAE/D,WAAS,IAAD,SACeE,KAAKT,MAAnBC,EADD,EACCA,IAAIC,EADL,EACKA,OACLQ,EAAaT,EAAIU,QAAO,SAAAJ,GAAI,OAChCA,EAAKvB,KAAK4B,cAAcC,SAASX,EAAOU,kBAE1C,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,qBAAKA,UAAU,cAAf,SACE,uBACEgC,KAAK,SACLC,YAAY,mBACZC,SAAY,SAAAC,GAAC,OAAI,EAAKT,SAAS,CAACN,OAASe,EAAEC,OAAOC,aAGtD,cAAC,EAAD,CAAUxB,KAAQe,W,GAhCRU,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6aaca3be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport const Mycards = props =>{\r\n    return (\r\n        <div key={props.id} className=\"cards\">\r\n            <img src={props.name.image} height=\"200px\" width=\"280px\" style={{objectFit:'contain'}} alt=\"Photos\" />\r\n            <h1>{props.name.name}</h1>\r\n            <p>{props.name.actor}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './card-list.css'\r\nimport { Mycards } from \"../card/card.component\";\r\nexport const CardList = props =>{\r\n    let i = 1;\r\n    return(\r\n        <div className=\"card\">\r\n        {props.list.map(char =>(\r\n            <React.Fragment key={i++}>\r\n            {(char.image !== '') ? <Mycards name={char} key={i++}  /> : <></>}\r\n            </React.Fragment>\r\n        ))}  \r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\nimport './App.css'\nimport {CardList} from './component/cards-list/card-list.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      all : [],\n      search : ''\n    };\n  }\n  componentDidMount(){\n\n    \n    // API Reference https://hp-api.herokuapp.com/ \n\n    fetch('https://hp-api.herokuapp.com/api/characters')\n    .then((res) => res.json()).then(data => this.setState({all : data}))\n  }\n  render(){\n    const {all,search} = this.state;\n    const filterData = all.filter(data =>\n      data.name.toLowerCase().includes(search.toLowerCase())\n      )\n    return(\n      <div className=\"App\">\n        <h1 className='BigFont'>Harry Potter</h1>\n        <div className='input-field'>\n          <input \n            type=\"search\"\n            placeholder=\"Search character\"\n            onChange = {e => this.setState({search : e.target.value})}\n            />\n        </div>\n        <CardList list = {filterData} >\n        </CardList>\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}